# Environment variables go here, and can be read in by Python using `os.getenv`:
#
#   --------------------------------------------------------
#   import os
#
#   # Example variable
#   EXAMPLE_VARIABLE = os.getenv("EXAMPLE_VARIABLE")
#   --------------------------------------------------------
#
# To ensure the `sed` command below works correctly, make sure all file paths in environment variables are absolute
# (recommended), or are relative paths using other environment variables (works for Python users only). Environment
# variable names are expected to contain letters, numbers or underscores only.
#
# DO NOT STORE SECRETS HERE - this file is version-controlled! You should store secrets in a `.secrets` file, which is
# not version-controlled - this can then be sourced here, using `source_env ".secrets"`.

# Extract the variables to `.env` if required. Note `.env` is NOT version-controlled, so `.secrets` will not be
# committed
sed -n 's/^export \(.*\)$/\1/p' .envrc .secrets | sed -e 's?$(pwd)?'"$(pwd)"'?g' | sed -e 's?$\([a-zA-Z0-9_]\{1,\}\)?${\1}?g' > .env


# Import secrets from an untracked file `.secrets`
source_env ".secrets"

# Add environment variables for the `data` directories
# export DIR_DATA=$(pwd)/src/data

# Add environment variables for the `docs` directory
export DIR_DOCS=$(pwd)/docs

# Add environment variables for the `notebooks` directory
export DIR_NOTEBOOKS=$(pwd)/notebooks

# Add environment variables for the `outputs` directory
export DIR_OUTPUTS=$(pwd)/src/outputs

# Add environment variables for the `src` directories
export DIR_SRC=$(pwd)/src
export DIR_SRC_UTILS=$(pwd)/src/utils
export DIR_SRC_CONFIG=$(pwd)/src/config
export DIR_SRC_API=$(pwd)/src/api
export DIR_SRC_APP=$(pwd)/src/app
export DIR_SRC_MOCK=$(pwd)/src/mock

# Add environment variables for the `tests` directory
export DIR_TESTS=$(pwd)/tests

# ===================================================================== #
# GOV.UK cookiecutter above / local edits and notes below
# ===================================================================== #

# SET THE ENVIRONMENT
# e.g. export ENV=dev
# but do this in .secrets to it's machine specific

# Add the working directory to `PYTHONPATH`; allows Jupyter notebooks in the `notebooks` folder to import `src`
# export PYTHONPATH="${PYTHONPATH}:${PWD}"
# PYTHON modules are assumed to run from ./src
export PYTHONPATH="${PYTHONPATH}:src"
export PYTHONDONTWRITEBYTECODE=1
export PYTHONUNBUFFERED=1

# Activate conda environment
# as per https://linuxtut.com/en/909f9619bc8c4330d523/
eval "$(conda shell.bash hook)"
conda activate hyuiv4

# Set GITHUB_ACTIONS to True via the ./.github/workflows/main.yml config
# then use pytest.skipif to block tests that will necessarily fail on github
# e.g. where .secrets are involved
export GITHUB_ACTIONS=False
