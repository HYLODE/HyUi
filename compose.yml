x-http-proxy: &http-proxy ${HTTP_PROXY}
x-https-proxy: &https-proxy ${HTTPS_PROXY}
x-no-proxy: &no-proxy localhost,127.0.0.1,uclvlddpragae07,uclvlddpragae08,api,web,cache,baserow

x-proxy-common: &proxy-common
  HTTP_PROXY: *http-proxy
  http_proxy: *http-proxy
  HTTPS_PROXY: *https-proxy
  https_proxy: *https-proxy
  NO_PROXY: *no-proxy
  no_proxy: *no-proxy

x-build-args-common: &build-args-common
  <<: *proxy-common
  HYLODE_UID: ${HYLODE_UID}

services:
  api:
    build:
      dockerfile: docker/api/Dockerfile
      args:
        <<: *build-args-common
    environment:
      <<: *proxy-common
    env_file: .env
    depends_on:
      - baserow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 200s
      timeout: 200s
      retries: 5
    ports:
      - ${API_PORT}:8000
    networks:
      - hyui

  web:
    build:
      dockerfile: docker/web/Dockerfile
      args:
        <<: *build-args-common
    environment:
      <<: *proxy-common
    env_file: .env
    ports:
      - ${WEB_PORT}:8000
    depends_on:
      - baserow
      - api
      - redis
    networks:
      - hyui

  redis:
    image: redis:7.0-alpine
    environment:
      <<: *proxy-common
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
    networks:
      - hyui

  redisinsight:
    image: redislabs/redisinsight
    environment:
      <<: *proxy-common
    ports:
      - ${REDISINSIGHT_PORT}:8001
    networks:
      - hyui
    depends_on:
      - redis
    volumes:
      - redisinsight:/db

  celery_worker:
    build:
      dockerfile: docker/celery/Dockerfile
      args:
        <<: *build-args-common
    environment:
      <<: *proxy-common
    command: /app/start-worker
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - hyui

  celery_beat:
    build:
      dockerfile: docker/celery/Dockerfile
      args:
        <<: *build-args-common
    environment:
      <<: *proxy-common
    command: /app/start-beat
    env_file:
      - .env
    depends_on:
      - redis
      - api
      - celery_worker
    networks:
      - hyui

  celery_flower:
    build:
      dockerfile: docker/celery/Dockerfile
      args:
        <<: *build-args-common
    environment:
      <<: *proxy-common
    command: /app/start-flower
    ports:
      - "${FLOWER_PORT}:5557"
    env_file:
      - .env
    depends_on:
      - redis
      - celery_worker
    networks:
      - hyui

  baserow:
    image: baserow/baserow:1.16.0
    environment:
      <<: *proxy-common
    env_file: .env
    ports:
      - ${BASEROW_PORT}:80
    networks:
      - hyui
    volumes:
      - baserow-data:/baserow/data

networks:
  hyui:


volumes:
  baserow-data:
  redisinsight:
