version: '3.8'

# Common vars
x-http-proxy: &http-proxy ${HTTP_PROXY}
x-https-proxy: &https-proxy ${HTTPS_PROXY}
x-no-proxy: &no-proxy localhost,127.0.0.1,uclvlddpragae07,uclvlddpragae08,api,apps
x-proxy-common: &proxy-common
  HTTP_PROXY: *http-proxy
  http_proxy: *http-proxy
  HTTPS_PROXY: *https-proxy
  https_proxy: *https-proxy
  NO_PROXY: *no-proxy
  no_proxy: *no-proxy

x-hyui-common-env: &hyui-common-env
  DOCKER: "True"

x-build-args-common: &build-args-common
  <<: *proxy-common
  HYUI_UID: ${HYUI_UID}

x-remote-data-stores: &remote-data-stores
  USE_EMAP_DB: ${USE_EMAP_DB}
  EMAP_DB_HOST: ${EMAP_DB_HOST}
  EMAP_DB_PORT: ${EMAP_DB_PORT}
  EMAP_DB_NAME: ${EMAP_DB_NAME}
  USE_CABOODLE_DB:  ${USE_CABOODLE_DB}
  CABOODLE_DB_HOST: ${CABOODLE_DB_HOST}
  CABOODLE_DB_PORT: ${CABOODLE_DB_PORT}
  CABOODLE_DB_NAME: ${CABOODLE_DB_NAME}

x-emap-credentials: &emap-credentials
  EMAP_DB_USER: ${EMAP_DB_USER}
  EMAP_DB_PASSWORD: ${EMAP_DB_PASSWORD}

x-caboodle-credentials: &caboodle-credentials
  CABOODLE_DB_USER: ${CABOODLE_DB_USER}
  CABOODLE_DB_PASSWORD: ${CABOODLE_DB_PASSWORD}

# TODO: merge into HYLODE database
x-HYUI-common-env: &HYUI-common-env
  HYUI_ENV: ${HYUI_ENV}
  HYUI_DB_HOST: ${HYUI_DB_HOST}
  HYUI_DB_PORT: ${HYUI_DB_PORT}
  HYUI_DB_NAME: ${HYUI_DB_NAME}
  HYUI_DB_USER: ${HYUI_DB_USER}
  HYUI_DB_PASSWORD: ${HYUI_DB_PASSWORD}

services:

  # API docker image / reads and wrangles data
  # returns data via fastapi to dash app
  api:
    build:
      context: ./src
      dockerfile: Dockerfile.api
      args:
        <<: *build-args-common
    # NOTE: the --reload flag means that edits are automtically redeployed
    command: uvicorn api.main:app --workers 1 --host 0.0.0.0 --port 8094
    ports:
      - "8094:8094"
    expose:
      - "8094"
    environment:
      <<: *proxy-common
      <<: *remote-data-stores
      <<: *emap-credentials
      <<: *caboodle-credentials
      <<: *hyui-common-env
    env_file:
      - .env
    stdin_open: true
    tty: true

  # Dash (Plotly) docker image / web app that visualises results
  # reads data via requests from api app
  apps:
    build:
      context: ./src
      dockerfile: Dockerfile.apps
      args:
        <<: *build-args-common
    command: gunicorn --bind 0.0.0.0:8095 -w 4 -k gevent --worker-tmp-dir /dev/shm apps.app:server
    ports:
      - "8095:8095"
    environment:
      <<: *proxy-common
      <<: *hyui-common-env
    env_file:
      - .env
    depends_on:
      - api
    # the following permits use of the python debugger
    stdin_open: true
    tty: true

  playwright:
    build:
      context: ./src
      dockerfile: Dockerfile.playwright
      args:
        <<: *build-args-common
    command: ./wait-for http://apps:8095 -- pytest -m e2e src/tests/playwright
    volumes:
      - ./src:/src
    environment:
      <<: *proxy-common
      <<: *hyui-common-env
      Docker: "True"
    env_file:
      - .env
    # depends on does not 'wait'
    depends_on:
      - api
      - apps
    profiles:
      - testing

  baserow:
    container_name: baserow
    image: baserow/baserow:1.10.2
    env_file:
      - .env
    environment:
      # TODO switch to .env definition
      # BASEROW_PUBLIC_URL: "${HOST_URL}:8097""
      BASEROW_PUBLIC_URL: "http://localhost:8097"
      # TODO: define this in .env and switch to UDS at UCLH
      # DATABASE_URL: "postgresql://steve:@host.docker.internal:5432/hyui"
      DATABASE_URL: "postgres://${HYUI_DB_USER}:${HYUI_DB_PASSWORD}@postgres:5432/${HYUI_DB_NAME}?sslmode=disable"
      # WEB_FRONTEND_PORT: 8097
      # WEB_FRONTEND_SSL_PORT: 8098
    ports:
      - "8097:80"
    volumes:
      # test username:password steve:hylode22
      - baserow_data:/baserow/data
    depends_on:
      - postgres

  postgres:
    image: postgres:12-buster
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${HYUI_DB_USER}
      POSTGRES_PASSWORD: ${HYUI_DB_PASSWORD}
    ports:
      - "${HYUI_DB_PORT}:5432"
    volumes:
      - baserow_db:/var/lib/postgresql/data

  pgweb:
    image: sosedoff/pgweb
    restart: always
    env_file:
      - .env
    ports:
      - "8099:8081"
    links:
      - postgres:postgres
    environment:
      DATABASE_URL: "postgres://${HYUI_DB_USER}:${HYUI_DB_PASSWORD}@postgres:5432/${HYUI_DB_NAME}?sslmode=disable"
    depends_on:
      - postgres

# top level docker volume - cannot link to local dir
# but if I use local postgres then don't think this matters
volumes:
  baserow_data:
  baserow_db:
