# src/mock/mock.py
import pandas as pd
from pathlib import Path
from sqlmodel import Session, create_engine

# this next step forces the metadata to generate
import api.models

SYNTH_HDF_DATA_PATH = Path(__file__).parent / "mock.h5"


def make_mock_df(f: Path) -> pd.DataFrame:
    """
    Makes a dataframe from the HDF file generated by the code in ./synth
    """
    try:
        assert f.is_file()
    except AssertionError as e:
        print(e)
        print(f"!!! Synthetic data not found at {f}")
        print("!!! Follow the instructions in ./synth/readme.md to generate")
        print("!!! Then check that you've manually copied the HDF file")
        print("!!! from ./synth/portal/ to ./src/mock/")
    df = pd.read_hdf(f)
    return df


def make_session():
    # create an in memory database for the session
    engine = create_engine(
        "sqlite://", connect_args={"check_same_thread": False}, poolclass=StaticPool
    )
    SQLModel.metadata.create_all(engine)
    with Session(engine) as session:
        yield session


def load_mock_db(df: pd.DataFrame):
    """ """
    pass


if __name__ == "__main__":
    make_mock_df(SYNTH_HDF_DATA_PATH)
    print(SYNTH_HDF_DATA_PATH)
    make_session()
