# ./src/Dockerfile.apps

# Notes and references
# https://github.com/HYLODE/HySys/blob/dev/hylode/docker/hyflow/api/Dockerfile
# https://luis-sena.medium.com/creating-the-perfect-python-dockerfile-51bdec41f1c8

# see https://github.com/MicrosoftDocs/sql-docs/issues/6494#issuecomment-905434817
# for the justification for the --platform=linux/amd64 flag
FROM --platform=linux/amd64 python:3.9.9-slim-buster
SHELL ["/bin/bash", "-o", "pipefail", "-e", "-u", "-x", "-c"]

# OS setup
# --------
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-get install --no-install-recommends --yes \
        netcat libpq-dev gcc postgresql \
        procps ca-certificates \
        iproute2 git curl libpq-dev curl gnupg g++ locales \
        build-essential
RUN sed -i '/en_GB.UTF-8/s/^# //g' /etc/locale.gen && locale-gen

# clean up
RUN  apt-get autoremove && apt-get clean && rm -rf /var/lib/apt/lists/*

# Python set-up with shared requirements
# --------------------------------------
COPY ./requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# User setup
ARG HYUI_UID
RUN useradd -u $HYUI_UID -g 0 hyui

# Directories setup
RUN mkdir /app && chown -R $HYUI_UID:0 /app


WORKDIR /app
USER hyui

ENV VIRTUAL_ENV=/app/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Python set-up with API specific requirements
# --------------------------------------
COPY --chown=hyui:root ./apps/requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# NOTE: Copying full ./src dir for now so tests etc come too
COPY --chown=hyui:root . .

EXPOSE 8095

RUN source aliases4docker
# /dev/shm is mapped to shared memory and should be used for gunicorn heartbeat
# this will improve performance and avoid random freezes
CMD ["gunicorn", \
    "-b", "0.0.0.0:8095", \
    "-w", "4", \
    "-k", "gevent", \
    "--worker-tmp-dir", "/dev/shm", \
    "apps.app:server" \
]
