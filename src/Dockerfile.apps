# https://luis-sena.medium.com/creating-the-perfect-python-dockerfile-51bdec41f1c8
# using ubuntu LTS version
FROM ubuntu:20.04 AS builder-image
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install --no-install-recommends -y \
        python3.9 \
        python3.9-dev \
        python3.9-venv \
        python3-pip \
        python3-wheel \
        netcat \
        libpq-dev \
        gcc \
        postgresql \
        build-essential && \
   apt-get clean && rm -rf /var/lib/apt/lists/*

# create and activate virtual environment
# using final folder name to avoid path issues with packages
RUN python3.9 -m venv /home/hyui/venv
ENV PATH="/home/hyui/venv/bin:$PATH"

# install shared requirements
COPY ./requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# install requirements for apps
COPY ./apps/requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

FROM ubuntu:20.04 AS runner-image
RUN apt-get update && apt-get install --no-install-recommends -y python3.9 python3-venv && \
  apt-get clean && rm -rf /var/lib/apt/lists/*

RUN useradd --create-home hyui
COPY --from=builder-image /home/hyui/venv /home/hyui/venv

USER hyui
WORKDIR /home/hyui
# add app from local dash directory to WORKDIR (above)
# COPYING means directories are created at build time
# UNCOMMENT if you want a standalone dockerfile
# COPY . .

# BUT the PREFERRED default is to add as mount volumes via docker-compose
# AND THEN run using docker-compose
# docker-compose up --build dash

EXPOSE 8095

# make sure all messages always reach console
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE 1

# activate virtual environment
ENV VIRTUAL_ENV=/home/hyui/venv
ENV PATH="/home/hyui/venv/bin:$PATH"

# /dev/shm is mapped to shared memory and should be used for gunicorn heartbeat
# this will improve performance and avoid random freezes
CMD ["gunicorn","-b", "0.0.0.0:8095", "-w", "4", "-k", "gevent", "--worker-tmp-dir", "/dev/shm", "apps.app:server"]
