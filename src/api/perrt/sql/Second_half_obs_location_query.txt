
  	END AS vital,

  	ob.value_as_real,
  	ob.value_as_text,
  	ob.unit,
  	
  	-- Admisssion time, discharge time, location, age can probably be removed when happy with this string
  	loc.admission_time,
  	loc.discharge_time,
  	lo.location_string,
  	demog.date_of_birth, 
  	
  	-- Can think about making this a decimal?
  	EXTRACT(YEAR FROM AGE(ob.observation_datetime, demog.date_of_birth)) AS age_at_obs,
  	
  	-- Time to ICU admission
  	CASE 
	  	WHEN loc.admission_time > ob.observation_datetime THEN AGE(loc.admission_time, ob.observation_datetime) 
  		ELSE NULL
	END AS time_to_ICU
  
FROM
  star.visit_observation ob
    
-- observation look-up
	LEFT JOIN
  		star.visit_observation_type ot
  		ON ob.visit_observation_type_id = ot.visit_observation_type_id

	-- Now add in the hospital locations
	FULL JOIN star.location_visit loc 
		ON ob.hospital_visit_id = loc.hospital_visit_id

	-- Get the actual location names	
	INNER JOIN star.location lo ON loc.location_id = lo.location_id

	-- Get the patient ages so we can bin children - need to match the MRN first
	INNER JOIN star.hospital_visit visit ON visit.hospital_visit_id = loc.hospital_visit_id

	-- Now we can pull birthday
	INNER JOIN star.core_demographic demog ON visit.mrn_id = demog.mrn_id

-- Only recent obs at this stage
WHERE ob.observation_datetime > NOW() - '5 MINS'::INTERVAL

-- Only use patients over 16
AND ob.observation_datetime - demog.date_of_birth > '16 YEARS'::INTERVAL

-- Only include named obs
AND ot.id_in_application in 

  (
  '10'            --'SpO2'                  -- 602063230
  ,'5'            --'BP'                    -- 602063234
  ,'3040109304'   --'Room Air or Oxygen'    -- 602063268
  ,'6'            --'Temp'                  -- 602063248
  ,'8'            --'Pulse'                 -- 602063237
  ,'9'            --'Resp'                  -- 602063257
  ,'6466'         -- Level of consciousness
  ,{otherobs}
)

-- Now bin the ED and ICU rows - will need to work out how to get rid of WMS/ GWB ICU beds - could consider just binning all GWB/ WMS
-- Will probably need to get rid of all patients with obs day cases/ elective lists? 

-- Now ensure that we are only looking at obs from ward patients using previously built view
AND lo.location_string IN (SELECT location_string FROM flow.ward_location)


-- Now bin all rows where the observation isn't in the location admission window - could be using between here?
AND 
ob.observation_datetime >= loc.admission_time 

AND
(ob.observation_datetime <= loc.discharge_time OR loc.discharge_time IS NULL)

ORDER BY ob.observation_datetime DESC
;